use strict;

my $usage = "perl nt-alignment2cmbuild-qsub.pl <nt stk alignment file>\n";
if(scalar(@ARGV) != 1) { die $usage; }

my ($nt_stk_file) = (@ARGV);

my $tt;
my $root;
if($nt_stk_file =~ /cox1.\d+\.(tt\d+)\.(\S+)\.nt.stk/) { 
  $tt = $1;
  $root = $2;
}
else { 
  die "ERROR unable to parse stk file name";
}

my $cm_name = "cox1." . $tt . "." . $root;  
my @ere_opt_A  = ("0.6", "0.7", "0.8", "0.9", "1.0", "1.1", "1.2", "1.3", "1.4");
my @ere_name_A = ("0p6", "0p7", "0p8", "0p9", "1p0", "1p1", "1p2", "1p3", "1p4");
my $nere = scalar(@ere_opt_A);

for(my $i = 0; $i < $nere; $i++) { 
  my $cm_root = $cm_name . "." . $ere_name_A[$i];
  my $cm_file_name = $cm_root . ".vadr.cm";
  my $cmbuild_file_name = $cm_root . ".vadr.cmbuild";
  my $cmbuild_cmd = "cmbuild -F -n $cm_name --noss --ere $ere_opt_A[$i] $cm_file_name $nt_stk_file > $cmbuild_file_name";
  printf("qsub -N $cm_root -b y -v SGE_FACILITIES -P unified -S /bin/bash -cwd -V -j n -o /dev/null -e $cm_root.err -l m_mem_free=8G,h_rt=2880000,mem_free=8G,h_vmem=8G -m n \"$cmbuild_cmd\"\n");
}
